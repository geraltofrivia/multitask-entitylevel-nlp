# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# Lets also ignore the pycharm config
.idea

# Custom Stuff
/data/parsed/
/data/raw/ontonotes/conll-2012/v5/data/
/data/raw/ontonotes/ontonotes-release-5.0/
/data/raw/ontonotes/ontonotes-release-5.0_LDC2013T19.tgz
/data/raw/ontonotes/v12.tar.gz
/src/.ipynb_checkpoints/
/data/runs/ne_coref/
/models/huggingface/
/models/word2vec/
/models/trained/
/models/glove/
/wandb/
/data/raw/scierc/dev.json
/data/raw/scierc/sciERC_processed.tar.gz
/data/raw/scierc/test.json
/data/raw/scierc/train.json
/data/raw/codicrac-arrau-pear/Pear_Stories.CONLL
/data/raw/codicrac-ami/AMI_dev.CONLLUA
/data/raw/codicrac-arrau-rst/RST_DTreeBank_dev.CONLL
/data/raw/codicrac-arrau-t93/Trains_93.CONLL
/data/raw/codicrac-arrau-t91/Trains_91.CONLL
/data/raw/codicrac-arrau/ARRAU2.0_UA_v3_LDC2021E05.zip
/data/raw/codicrac-arrau-rst/RST_DTreeBank_test.CONLL
/data/raw/codicrac-switchboard/Switchboard_3_dev.CONLL
/data/raw/codicrac-persuasion/Persuasion_dev.CONLLUA
/data/raw/codicrac-arrau-gnome/Gnome_Subset2.CONLL
/data/raw/codicrac-light/light_dev.CONLLUA
/data/raw/codicrac-arrau-rst/RST_DTreeBank_train.CONLL
/data/raw/codicrac-light/__MACOSX/
/data/raw/codicrac-light/light_dev.CONLLUA.zip
/data/raw/codicrac-switchboard/__MACOSX/
/data/raw/codicrac-switchboard/Switchboard_3_dev.CONLL_LDC2021E05.zip
/temp/
/data/encoded
!/data/raw/codicrac-light/
!/data/raw/codicrac-light/light_dev.2022.CONLLUA
!/data/raw/codicrac-light/light_train.2022.CONLLUA
!/data/raw/codicrac-persuasion/
!/data/raw/codicrac-persuasion/Persuasion_dev.2022.CONLLUA
!/data/raw/codicrac-persuasion/Persuasion_train.2022.CONLLUA
!/data/raw/codicrac-switchboard/
!/data/raw/codicrac-switchboard/Switchboard_dev.2022.CONLLUA
!/data/raw/codicrac-switchboard/Switchboard_train.2022.CONLLUA
/data/manual/speaker*tag_dict.json
/src/wandb/
/data/raw/ace/
/data/raw/dwie/
